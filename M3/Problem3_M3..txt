Code-1:     int sum = 0;
        for (int n = N; n > 0; n /= 2)
            for(int i = 0; i < n; i++)
                Sum++;

The inner loop is iterated by a constant value so O(n). The outer loop is divided by a constant value, so log(N). The time complexity is O(nLog(N)).

Code-2:    int sum = 0;
        for (int i = 1; i < N; i *= 2) 
            for (int j = 0; j < i; j++)
                sum++;

The inner loop variable is dependent on the outer loop variable so the complexity is O(NLogN).

Code-3:    int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < N; j++)
                Sum++;

The Outer loop is mutliplied by a constant value, so LogN. The inner loop iterates by a constant value, so N. The time complexity is O(NLogN)